/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package squad.ftt.gui;

import java.awt.Dimension;
import java.awt.Image;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.IOException;
import java.sql.Blob;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
import squad.ftt.adapters.ClubAdapter;
import squad.ftt.adapters.DonAdapter;
import squad.ftt.dao.classes.ClubDao;
import squad.ftt.dao.classes.DonDao;
import squad.ftt.entities.Club;
import squad.ftt.entities.Don;

/**
 *
 * @author esprit
 */
public class GestionClub extends javax.swing.JFrame {

    /**
     * Creates new form GestionEvenement
     */
    public GestionClub() {
        initComponents();
        this.setResizable(true);
        this.setTitle("Féderation Tunisienne de Tennis");
    }
    Club cl = new Club();
    ClubDao cdao = new ClubDao();
    Don d = new Don();
    DonDao ddao = new DonDao();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        donDisplayFrame = new javax.swing.JFrame();
        jScrollPane3 = new javax.swing.JScrollPane();
        DonTable = new javax.swing.JTable();
        infoLabel = new javax.swing.JLabel();
        infoNameLabel = new javax.swing.JLabel();
        rechDonLabel = new javax.swing.JLabel();
        rechDonField = new javax.swing.JTextField();
        info2Label = new javax.swing.JLabel();
        dateDonLabel = new javax.swing.JLabel();
        sommeDonLabel = new javax.swing.JLabel();
        donSommeField = new javax.swing.JSpinner();
        dateDonField = new com.toedter.calendar.JDateChooser();
        cancelDonButton = new javax.swing.JButton();
        addDonButton = new javax.swing.JButton();
        retourButton = new javax.swing.JButton();
        fond2 = new javax.swing.JLabel();
        Actualite = new javax.swing.JLabel();
        Joueurs = new javax.swing.JLabel();
        Match = new javax.swing.JLabel();
        Club = new javax.swing.JLabel();
        Tournoi = new javax.swing.JLabel();
        MatchAmicale = new javax.swing.JLabel();
        GestionDopage = new javax.swing.JLabel();
        Stade = new javax.swing.JLabel();
        Concours = new javax.swing.JLabel();
        Formation5 = new javax.swing.JLabel();
        article = new javax.swing.JLabel();
        nbreLabel = new javax.swing.JLabel();
        rechercheLabel = new javax.swing.JLabel();
        sigleLabel = new javax.swing.JLabel();
        adresseLabel = new javax.swing.JLabel();
        descLabel = new javax.swing.JLabel();
        nomClubLabel4 = new javax.swing.JLabel();
        sigleField = new javax.swing.JLabel();
        adresseField = new javax.swing.JTextField();
        rechClubField = new javax.swing.JTextField();
        nomClubField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        descField = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        ClubTable = new javax.swing.JTable();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        viderFormButton = new javax.swing.JButton();
        imgButton = new javax.swing.JButton();
        nbreField = new javax.swing.JSpinner();
        rech2Field = new javax.swing.JTextField();
        donButton = new javax.swing.JButton();
        Fond = new javax.swing.JLabel();

        donDisplayFrame.getContentPane().setLayout(null);

        DonTable.setModel(new DonAdapter());
        jScrollPane3.setViewportView(DonTable);

        donDisplayFrame.getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(10, 100, 300, 350);

        infoLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        infoLabel.setForeground(new java.awt.Color(255, 255, 0));
        infoLabel.setText("Ci-dessous la liste des dons reçus par ");
        donDisplayFrame.getContentPane().add(infoLabel);
        infoLabel.setBounds(10, 30, 280, 20);

        infoNameLabel.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        infoNameLabel.setForeground(new java.awt.Color(204, 0, 0));
        donDisplayFrame.getContentPane().add(infoNameLabel);
        infoNameLabel.setBounds(290, 30, 200, 20);

        rechDonLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        rechDonLabel.setForeground(new java.awt.Color(255, 255, 0));
        rechDonLabel.setText("Recherche");
        donDisplayFrame.getContentPane().add(rechDonLabel);
        rechDonLabel.setBounds(10, 60, 110, 30);

        rechDonField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechDonFieldActionPerformed(evt);
            }
        });
        rechDonField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rechDonFieldKeyReleased(evt);
            }
        });
        donDisplayFrame.getContentPane().add(rechDonField);
        rechDonField.setBounds(150, 60, 160, 30);

        info2Label.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        info2Label.setForeground(new java.awt.Color(255, 255, 0));
        info2Label.setText("Attribuer un nouveau don");
        donDisplayFrame.getContentPane().add(info2Label);
        info2Label.setBounds(710, 30, 200, 22);

        dateDonLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        dateDonLabel.setForeground(new java.awt.Color(255, 255, 0));
        dateDonLabel.setText("Date");
        donDisplayFrame.getContentPane().add(dateDonLabel);
        dateDonLabel.setBounds(710, 110, 100, 30);

        sommeDonLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        sommeDonLabel.setForeground(new java.awt.Color(255, 255, 0));
        sommeDonLabel.setText("Somme");
        donDisplayFrame.getContentPane().add(sommeDonLabel);
        sommeDonLabel.setBounds(710, 70, 100, 30);
        donDisplayFrame.getContentPane().add(donSommeField);
        donSommeField.setBounds(810, 70, 140, 30);
        donDisplayFrame.getContentPane().add(dateDonField);
        dateDonField.setBounds(810, 110, 140, 30);

        cancelDonButton.setText("Annuler");
        cancelDonButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cancelDonButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelDonButtonActionPerformed(evt);
            }
        });
        donDisplayFrame.getContentPane().add(cancelDonButton);
        cancelDonButton.setBounds(840, 180, 100, 21);

        addDonButton.setText("Confirmer");
        addDonButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addDonButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDonButtonActionPerformed(evt);
            }
        });
        donDisplayFrame.getContentPane().add(addDonButton);
        addDonButton.setBounds(700, 180, 100, 21);

        retourButton.setText("Retour");
        retourButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        retourButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retourButtonActionPerformed(evt);
            }
        });
        donDisplayFrame.getContentPane().add(retourButton);
        retourButton.setBounds(850, 470, 110, 30);

        fond2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/squad/ftt/images/fond2.png"))); // NOI18N
        donDisplayFrame.getContentPane().add(fond2);
        fond2.setBounds(0, 0, 990, 552);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        Actualite.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ActualiteMouseClicked(evt);
            }
        });
        getContentPane().add(Actualite);
        Actualite.setBounds(0, 120, 210, 40);

        Joueurs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JoueursMouseClicked(evt);
            }
        });
        getContentPane().add(Joueurs);
        Joueurs.setBounds(0, 160, 200, 40);

        Match.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MatchMouseClicked(evt);
            }
        });
        getContentPane().add(Match);
        Match.setBounds(0, 210, 200, 40);

        Club.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClubMouseClicked(evt);
            }
        });
        getContentPane().add(Club);
        Club.setBounds(0, 260, 200, 40);

        Tournoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TournoiMouseClicked(evt);
            }
        });
        getContentPane().add(Tournoi);
        Tournoi.setBounds(0, 310, 200, 40);

        MatchAmicale.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MatchAmicaleMouseClicked(evt);
            }
        });
        getContentPane().add(MatchAmicale);
        MatchAmicale.setBounds(0, 360, 200, 40);

        GestionDopage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GestionDopageMouseClicked(evt);
            }
        });
        getContentPane().add(GestionDopage);
        GestionDopage.setBounds(0, 450, 200, 40);

        Stade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StadeMouseClicked(evt);
            }
        });
        getContentPane().add(Stade);
        Stade.setBounds(0, 410, 200, 40);

        Concours.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ConcoursMouseClicked(evt);
            }
        });
        getContentPane().add(Concours);
        Concours.setBounds(0, 500, 210, 40);

        Formation5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Formation5MouseClicked(evt);
            }
        });
        getContentPane().add(Formation5);
        Formation5.setBounds(0, 540, 210, 40);
        getContentPane().add(article);
        article.setBounds(0, 590, 210, 30);

        nbreLabel.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        nbreLabel.setForeground(new java.awt.Color(255, 255, 0));
        nbreLabel.setText("Nbre de terrains");
        getContentPane().add(nbreLabel);
        nbreLabel.setBounds(250, 180, 140, 30);

        rechercheLabel.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        rechercheLabel.setForeground(new java.awt.Color(255, 255, 0));
        rechercheLabel.setText("Recherche");
        getContentPane().add(rechercheLabel);
        rechercheLabel.setBounds(580, 100, 140, 30);

        sigleLabel.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        sigleLabel.setForeground(new java.awt.Color(255, 255, 0));
        sigleLabel.setText("Sigle du club");
        getContentPane().add(sigleLabel);
        sigleLabel.setBounds(250, 380, 140, 30);

        adresseLabel.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        adresseLabel.setForeground(new java.awt.Color(255, 255, 0));
        adresseLabel.setText("Adresse");
        getContentPane().add(adresseLabel);
        adresseLabel.setBounds(250, 140, 140, 30);

        descLabel.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        descLabel.setForeground(new java.awt.Color(255, 255, 0));
        descLabel.setText("Description du club");
        getContentPane().add(descLabel);
        descLabel.setBounds(250, 220, 140, 30);

        nomClubLabel4.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        nomClubLabel4.setForeground(new java.awt.Color(255, 255, 0));
        nomClubLabel4.setText("Nom du Club");
        getContentPane().add(nomClubLabel4);
        nomClubLabel4.setBounds(250, 100, 140, 30);
        getContentPane().add(sigleField);
        sigleField.setBounds(250, 420, 300, 140);

        adresseField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adresseFieldActionPerformed(evt);
            }
        });
        getContentPane().add(adresseField);
        adresseField.setBounds(400, 140, 150, 30);

        rechClubField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechClubFieldActionPerformed(evt);
            }
        });
        rechClubField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rechClubFieldKeyReleased(evt);
            }
        });
        getContentPane().add(rechClubField);
        rechClubField.setBounds(710, 100, 150, 30);

        nomClubField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomClubFieldActionPerformed(evt);
            }
        });
        getContentPane().add(nomClubField);
        nomClubField.setBounds(400, 100, 150, 30);

        descField.setColumns(20);
        descField.setRows(5);
        jScrollPane1.setViewportView(descField);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(250, 250, 300, 120);

        ClubTable.setModel(new ClubAdapter());
        ClubTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ClubTableMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(ClubTable);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(580, 140, 610, 230);

        updateButton.setText("Modifier");
        updateButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        getContentPane().add(updateButton);
        updateButton.setBounds(710, 390, 110, 21);

        deleteButton.setText("Supprimer");
        deleteButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        getContentPane().add(deleteButton);
        deleteButton.setBounds(840, 390, 110, 21);

        addButton.setText("Ajouter");
        addButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        getContentPane().add(addButton);
        addButton.setBounds(580, 390, 110, 21);

        viderFormButton.setText("Vider le formulaire");
        viderFormButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        viderFormButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viderFormButtonActionPerformed(evt);
            }
        });
        getContentPane().add(viderFormButton);
        viderFormButton.setBounds(250, 570, 300, 21);

        imgButton.setText("Joindre une photo");
        imgButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        imgButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imgButtonActionPerformed(evt);
            }
        });
        getContentPane().add(imgButton);
        imgButton.setBounds(400, 390, 150, 21);
        getContentPane().add(nbreField);
        nbreField.setBounds(400, 180, 150, 30);

        rech2Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rech2FieldActionPerformed(evt);
            }
        });
        rech2Field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rech2FieldKeyReleased(evt);
            }
        });
        getContentPane().add(rech2Field);
        rech2Field.setBounds(270, 10, 180, 30);

        donButton.setText("Gestion des dons");
        donButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        donButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donButtonActionPerformed(evt);
            }
        });
        getContentPane().add(donButton);
        donButton.setBounds(1050, 387, 140, 21);

        Fond.setIcon(new javax.swing.ImageIcon(getClass().getResource("/squad/ftt/images/Club1.jpg"))); // NOI18N
        getContentPane().add(Fond);
        Fond.setBounds(0, -10, 1260, 640);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ActualiteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ActualiteMouseClicked

        this.dispose();
        AffichageActualite ge = new AffichageActualite();
        ge.setSize(1220, 655);
        ge.setVisible(true);

    }//GEN-LAST:event_ActualiteMouseClicked

    private void JoueursMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JoueursMouseClicked
        this.dispose();
        GestionJoueurs ge = new GestionJoueurs();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_JoueursMouseClicked

    private void MatchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MatchMouseClicked
        this.dispose();
        GestionMatchs ge = new GestionMatchs();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_MatchMouseClicked

    private void ClubMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClubMouseClicked
        this.dispose();
        GestionClub ge = new GestionClub();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_ClubMouseClicked

    private void TournoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TournoiMouseClicked
        this.dispose();
        GestionEvenement ge = new GestionEvenement();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_TournoiMouseClicked

    private void MatchAmicaleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MatchAmicaleMouseClicked
        this.dispose();
        GestionArbitre ge = new GestionArbitre();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_MatchAmicaleMouseClicked

    private void GestionDopageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GestionDopageMouseClicked
        this.dispose();
        GestionDopage ge = new GestionDopage();
        ge.setSize(1220, 655);
        ge.setVisible(true);

    }//GEN-LAST:event_GestionDopageMouseClicked

    private void StadeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StadeMouseClicked
        this.dispose();
        GestionStade ge = new GestionStade();
        ge.setSize(1220, 655);
        ge.setVisible(true);

    }//GEN-LAST:event_StadeMouseClicked

    private void ConcoursMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ConcoursMouseClicked
        this.dispose();
        GestionConcours ge = new GestionConcours();
        ge.setSize(1220, 655);
        ge.setVisible(true);

    }//GEN-LAST:event_ConcoursMouseClicked

    private void Formation5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Formation5MouseClicked
        this.dispose();
        GestionFormation ge = new GestionFormation();
        ge.setSize(1220, 655);
        ge.setVisible(true);

    }//GEN-LAST:event_Formation5MouseClicked

    private void rechClubFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechClubFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rechClubFieldActionPerformed

    private void nomClubFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomClubFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomClubFieldActionPerformed

    private void ClubTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClubTableMousePressed
        String lib = (String) ClubTable.getValueAt(ClubTable.getSelectedRow(), 0);
        int id = cdao.FindId(lib);
        cl = cdao.RechercherParId(id);
        Image im = new ImageIcon("C:/wamp/www/SquadWeb/web/uploads/clubs/"+cl.getPic()).getImage();
        Image imge = im.getScaledInstance(sigleField.getWidth(), sigleField.getHeight(), Image.SCALE_SMOOTH);      
        sigleField.setIcon(new ImageIcon(imge));
        nomClubField.setText(cl.getLibelle_club());
        adresseField.setText(cl.getEmplacement_club());
        nbreField.setValue(cl.getNbre_terrains());
        descField.setText(cl.getDescritption_club());
    }//GEN-LAST:event_ClubTableMousePressed

    private void viderFormButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viderFormButtonActionPerformed
        // TODO add your handling code here:
        nomClubField.setText("");
        adresseField.setText("");
        nbreField.setValue(0);
        descField.setText("");
        sigleField.setIcon(null);

    }//GEN-LAST:event_viderFormButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        if (ClubTable.getSelectedRow() > - 1) {
            String lib = (String) ClubTable.getValueAt(ClubTable.getSelectedRow(), 0);
            int id = cdao.FindId(lib);
            cl = cdao.RechercherParId(id);

            int nbre;
            nbre = Integer.parseInt(nbreField.getValue().toString());

            cl.setLibelle_club(nomClubField.getText());
            cl.setEmplacement_club(adresseField.getText());
            cl.setNbre_terrains(nbre);
            cl.setDescritption_club(descField.getText());
            cl.setId_Club(id);
            int reply = JOptionPane.showConfirmDialog(null, "Etes vous sur de vouloir modifier ce Club?", "Attention", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                cdao.Modifier(cl);
                JOptionPane.showMessageDialog(null, "Club modifié avec succée");
                ClubTable.setModel(new ClubAdapter());
                nomClubField.setText("");
                adresseField.setText("");
                nbreField.setValue(0);
                descField.setText("");
                sigleField.setIcon(null);

            }
        } else if (ClubTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Veuillez selectionner un club dans le tableau ci dessus");
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        int nbre;
        nbre = Integer.parseInt(nbreField.getValue().toString());
        if (nomClubField.getText().equals("")
                | adresseField.getText().equals("")
                | nbre <= 0
                | sigleField.getIcon() == null) {
            JOptionPane.showMessageDialog(null, "Veuillez remplir tous les champs vides");

        } else {

//            int nbre;
//            nbre = Integer.parseInt(nbreField.getValue().toString());

            cl.setLibelle_club(nomClubField.getText());
            cl.setEmplacement_club(adresseField.getText());
            cl.setNbre_terrains(nbre);
            cl.setDescritption_club(descField.getText());

            int reply = JOptionPane.showConfirmDialog(null, "Etes vous sur de vouloir ajouter ce Club?", "Attention", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                cdao.Ajouter(cl);
                JOptionPane.showMessageDialog(null, "Club ajouté avec succée");
                ClubTable.setModel(new ClubAdapter());

                nomClubField.setText("");
                adresseField.setText("");
                nbreField.setValue(0);
                descField.setText("");
                sigleField.setIcon(null);
            }

        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        if (ClubTable.getSelectedRow() > - 1) {
            String lib = (String) ClubTable.getValueAt(ClubTable.getSelectedRow(), 0);
            int id = cdao.FindId(lib);
            cl = cdao.RechercherParId(id);
            int reply = JOptionPane.showConfirmDialog(null, "Etes vous sur de vouloir supprimer ce Club?", "Attention", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                cdao.Supprimer(cl);
                ClubTable.setModel(new ClubAdapter());
                JOptionPane.showMessageDialog(null, "Club supprimé avec succée");
                ClubTable.setModel(new ClubAdapter());
                nomClubField.setText("");
                adresseField.setText("");
                nbreField.setValue(0);
                descField.setText("");
                sigleField.setIcon(null);

            }
        } else if (ClubTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Veuillez sélectionner un club dans le tableau ci dessus");
        }
    }//GEN-LAST:event_deleteButtonActionPerformed
    ClubAdapter ca = new ClubAdapter();

    public void filter(String query) {
        TableRowSorter<ClubAdapter> tr = new TableRowSorter<>(ca);
        ClubTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));

    }
    private void rechClubFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rechClubFieldKeyReleased
        // TODO add your handling code here:
        String query = rechClubField.getText();
        filter(query);
        if (query.equals("")) {
        ClubTable.setModel(ca);
        }
    }//GEN-LAST:event_rechClubFieldKeyReleased

    private void imgButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imgButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser ch = new JFileChooser();
        ch.showOpenDialog(null);
        File f = ch.getSelectedFile();
        cl.setImg_club(f.getAbsolutePath());
        cl.setPic(f.getName());
        ImageIcon ic = new ImageIcon(cl.getImg_club());
        Image img = ic.getImage().getScaledInstance(sigleField.getWidth(), sigleField.getHeight(), Image.SCALE_SMOOTH);
        sigleField.setIcon(new ImageIcon(img));
    }//GEN-LAST:event_imgButtonActionPerformed

    private void adresseFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adresseFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adresseFieldActionPerformed

    private void rech2FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rech2FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rech2FieldActionPerformed

    private void rech2FieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rech2FieldKeyReleased
        // TODO add your handling code here:
        String query = rech2Field.getText();
        filter(query);
        if (query.equals("")) {
            ClubTable.setModel(ca);
        }
    }//GEN-LAST:event_rech2FieldKeyReleased

    private void donButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donButtonActionPerformed
        // TODO add your handling code here:
        if (ClubTable.getSelectedRow() > -1) {

            String lib = (String) ClubTable.getValueAt(ClubTable.getSelectedRow(), 0);
            int id = cdao.FindId(lib);
            infoNameLabel.setText(cl.getLibelle_club());
            DonTable.setModel(new DonAdapter(id));
            DonTable.repaint();
            
            donDisplayFrame.setSize(990, 560);
            donDisplayFrame.setVisible(true);
            donDisplayFrame.setAlwaysOnTop(true);
            donDisplayFrame.setLocationRelativeTo(null);
            donDisplayFrame.setResizable(false);

        } else if (ClubTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Veuillez sélectionner un club dans le tableau");
        }
    }//GEN-LAST:event_donButtonActionPerformed

    private void rechDonFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechDonFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rechDonFieldActionPerformed

    private void cancelDonButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelDonButtonActionPerformed
        // TODO add your handling code here:
        donSommeField.setValue(0);
        dateDonField.setDate(null);
    }//GEN-LAST:event_cancelDonButtonActionPerformed

    private void retourButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retourButtonActionPerformed
        // TODO add your handling code here:
        donDisplayFrame.setVisible(false);
    }//GEN-LAST:event_retourButtonActionPerformed

    private void addDonButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDonButtonActionPerformed
        // TODO add your handling code here:
        float nbre;
        nbre = Float.parseFloat(donSommeField.getValue().toString());
        
        
        if (nbre <= 0 | dateDonField.getDate()==null){

            JOptionPane.showMessageDialog(donDisplayFrame, "Veuillez remplir tous les champs vides");

        } else {
        java.util.Date utilDate = dateDonField.getDate();
        java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());    
        d.setSomme(nbre);
        d.setDate_don(sqlDate);
        
        String lib = (String) ClubTable.getValueAt(ClubTable.getSelectedRow(), 0);
        int id = cdao.FindId(lib);
        d.setClub(cdao.RechercherParId(id));
        
        int reply = JOptionPane.showConfirmDialog(donDisplayFrame, "Etes vous sur de vouloir ajouter ce don?","Attention",JOptionPane.YES_NO_OPTION);
        if(reply == JOptionPane.YES_OPTION){

            ddao.Ajouter(d);
            
            JOptionPane.showMessageDialog(donDisplayFrame, "Don ajouté avec succée"); 
            DonTable.setModel(new DonAdapter(id));
            donSommeField.setValue(0);
            dateDonField.setDate(null);
        }
        }
    }//GEN-LAST:event_addDonButtonActionPerformed
    
    
    public void filter1(String query) {
        
        String lib = (String) ClubTable.getValueAt(ClubTable.getSelectedRow(), 0);
        int id = cdao.FindId(lib);
        DonAdapter da = new DonAdapter(id);
        DonTable.setModel(new DonAdapter(id));
        TableRowSorter<DonAdapter> tr = new TableRowSorter<>(da);
        DonTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));

    }
    private void rechDonFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rechDonFieldKeyReleased
        // TODO add your handling code here:
        
        String lib = (String) ClubTable.getValueAt(ClubTable.getSelectedRow(), 0);
        int id = cdao.FindId(lib);
        DonAdapter da = new DonAdapter();
        DonTable.setModel(new DonAdapter(id));
        DonTable.repaint();
        
        String query = rechDonField.getText();
        filter1(query);
        if (query.equals("")) {
            DonTable.setModel(da);
        }
    }//GEN-LAST:event_rechDonFieldKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionClub.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionClub.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionClub.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionClub.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GestionClub ge = new GestionClub();
                ge.setSize(1220, 665);
                ge.setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Actualite;
    private javax.swing.JLabel Club;
    private javax.swing.JTable ClubTable;
    private javax.swing.JLabel Concours;
    private javax.swing.JTable DonTable;
    private javax.swing.JLabel Fond;
    private javax.swing.JLabel Formation5;
    private javax.swing.JLabel GestionDopage;
    private javax.swing.JLabel Joueurs;
    private javax.swing.JLabel Match;
    private javax.swing.JLabel MatchAmicale;
    private javax.swing.JLabel Stade;
    private javax.swing.JLabel Tournoi;
    private javax.swing.JButton addButton;
    private javax.swing.JButton addDonButton;
    private javax.swing.JTextField adresseField;
    private javax.swing.JLabel adresseLabel;
    private javax.swing.JLabel article;
    private javax.swing.JButton cancelDonButton;
    private com.toedter.calendar.JDateChooser dateDonField;
    private javax.swing.JLabel dateDonLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextArea descField;
    private javax.swing.JLabel descLabel;
    private javax.swing.JButton donButton;
    private javax.swing.JFrame donDisplayFrame;
    private javax.swing.JSpinner donSommeField;
    private javax.swing.JLabel fond2;
    private javax.swing.JButton imgButton;
    private javax.swing.JLabel info2Label;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JLabel infoNameLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner nbreField;
    private javax.swing.JLabel nbreLabel;
    private javax.swing.JTextField nomClubField;
    private javax.swing.JLabel nomClubLabel4;
    private javax.swing.JTextField rech2Field;
    private javax.swing.JTextField rechClubField;
    private javax.swing.JTextField rechDonField;
    private javax.swing.JLabel rechDonLabel;
    private javax.swing.JLabel rechercheLabel;
    private javax.swing.JButton retourButton;
    private javax.swing.JLabel sigleField;
    private javax.swing.JLabel sigleLabel;
    private javax.swing.JLabel sommeDonLabel;
    private javax.swing.JButton updateButton;
    private javax.swing.JButton viderFormButton;
    // End of variables declaration//GEN-END:variables
}
