/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package squad.ftt.gui;

import java.awt.Dimension;
import java.awt.Image;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Blob;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
import squad.ftt.adapters.ClubAdapter;
import squad.ftt.adapters.JoueurAdapter;
import squad.ftt.dao.classes.ClubDao;
import squad.ftt.dao.classes.JoueurDao;
import squad.ftt.entities.Club;
import squad.ftt.entities.Joueur;

/**
 *
 * @author esprit
 */
public class GestionJoueurs extends javax.swing.JFrame {

    /**
     * Creates new form GestionEvenement
     */
    public GestionJoueurs() {
        initComponents();
        this.setTitle("FÃ©deration Tunisienne de Tennis");
    }
    Joueur j = new Joueur();
    JoueurDao jdao = new JoueurDao();
    Club cl = new Club();
    ClubDao cdao = new ClubDao();

    private int id;

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        clubDisplayFrame = new javax.swing.JFrame();
        infoLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ClubTable2 = new javax.swing.JTable();
        rechClubLabel = new javax.swing.JLabel();
        rechClubField = new javax.swing.JTextField();
        sigleClubfield = new javax.swing.JLabel();
        selectButton = new javax.swing.JButton();
        retourButton = new javax.swing.JButton();
        Fond2 = new javax.swing.JLabel();
        article = new javax.swing.JLabel();
        Formation5 = new javax.swing.JLabel();
        GestionDopage = new javax.swing.JLabel();
        Concours = new javax.swing.JLabel();
        Stade = new javax.swing.JLabel();
        MatchAmicale = new javax.swing.JLabel();
        Tournoi = new javax.swing.JLabel();
        Club = new javax.swing.JLabel();
        Match = new javax.swing.JLabel();
        Joueurs = new javax.swing.JLabel();
        Actualite = new javax.swing.JLabel();
        tailleLabel = new javax.swing.JLabel();
        prenomLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        categorieLabel = new javax.swing.JLabel();
        mainforteLabel = new javax.swing.JLabel();
        cinLabel = new javax.swing.JLabel();
        poidsLabel = new javax.swing.JLabel();
        nomLabel = new javax.swing.JLabel();
        nationaliteLabel = new javax.swing.JLabel();
        clubField = new javax.swing.JLabel();
        pointsLabel = new javax.swing.JLabel();
        imageLabel = new javax.swing.JLabel();
        clubLabel = new javax.swing.JLabel();
        tailleField = new javax.swing.JSpinner();
        poidsField = new javax.swing.JSpinner();
        pointsField = new javax.swing.JSpinner();
        cinField = new javax.swing.JSpinner();
        prenomField = new javax.swing.JTextField();
        nationaliteField = new javax.swing.JTextField();
        nomField = new javax.swing.JTextField();
        dateField = new com.toedter.calendar.JDateChooser();
        mainField = new javax.swing.JComboBox();
        categorieField1 = new javax.swing.JComboBox();
        clubButton = new javax.swing.JButton();
        imgButton = new javax.swing.JButton();
        clubNameLabel = new javax.swing.JLabel();
        imgLabel = new javax.swing.JLabel();
        rechField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        joueurTable = new javax.swing.JTable();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        emptyButton = new javax.swing.JButton();
        PDFButton = new javax.swing.JButton();
        Fond = new javax.swing.JLabel();

        clubDisplayFrame.getContentPane().setLayout(null);

        infoLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        infoLabel.setForeground(new java.awt.Color(255, 255, 0));
        infoLabel.setText("Ci-dessous la liste des Clubs disponnibles");
        clubDisplayFrame.getContentPane().add(infoLabel);
        infoLabel.setBounds(10, 30, 310, 20);

        ClubTable2.setModel(new ClubAdapter());
        ClubTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ClubTable2MousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(ClubTable2);

        clubDisplayFrame.getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 110, 610, 230);

        rechClubLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        rechClubLabel.setForeground(new java.awt.Color(255, 255, 0));
        rechClubLabel.setText("Recherche");
        clubDisplayFrame.getContentPane().add(rechClubLabel);
        rechClubLabel.setBounds(10, 60, 110, 30);

        rechClubField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechClubFieldActionPerformed(evt);
            }
        });
        rechClubField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rechClubFieldKeyReleased(evt);
            }
        });
        clubDisplayFrame.getContentPane().add(rechClubField);
        rechClubField.setBounds(150, 60, 160, 30);
        clubDisplayFrame.getContentPane().add(sigleClubfield);
        sigleClubfield.setBounds(720, 110, 250, 230);

        selectButton.setText("Selectionner");
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });
        clubDisplayFrame.getContentPane().add(selectButton);
        selectButton.setBounds(10, 350, 150, 25);

        retourButton.setText("Retour");
        retourButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retourButtonActionPerformed(evt);
            }
        });
        clubDisplayFrame.getContentPane().add(retourButton);
        retourButton.setBounds(840, 490, 120, 25);

        Fond2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/squad/ftt/images/fond2.png"))); // NOI18N
        clubDisplayFrame.getContentPane().add(Fond2);
        Fond2.setBounds(0, 0, 990, 550);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);
        getContentPane().add(article);
        article.setBounds(0, 590, 210, 30);

        Formation5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Formation5MouseClicked(evt);
            }
        });
        getContentPane().add(Formation5);
        Formation5.setBounds(0, 540, 210, 40);

        GestionDopage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GestionDopageMouseClicked(evt);
            }
        });
        getContentPane().add(GestionDopage);
        GestionDopage.setBounds(0, 450, 200, 40);

        Concours.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ConcoursMouseClicked(evt);
            }
        });
        getContentPane().add(Concours);
        Concours.setBounds(0, 500, 210, 40);

        Stade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StadeMouseClicked(evt);
            }
        });
        getContentPane().add(Stade);
        Stade.setBounds(0, 410, 200, 40);

        MatchAmicale.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MatchAmicaleMouseClicked(evt);
            }
        });
        getContentPane().add(MatchAmicale);
        MatchAmicale.setBounds(0, 360, 200, 40);

        Tournoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TournoiMouseClicked(evt);
            }
        });
        getContentPane().add(Tournoi);
        Tournoi.setBounds(0, 310, 200, 40);

        Club.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClubMouseClicked(evt);
            }
        });
        getContentPane().add(Club);
        Club.setBounds(0, 260, 200, 40);

        Match.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MatchMouseClicked(evt);
            }
        });
        getContentPane().add(Match);
        Match.setBounds(0, 210, 200, 40);

        Joueurs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JoueursMouseClicked(evt);
            }
        });
        getContentPane().add(Joueurs);
        Joueurs.setBounds(0, 160, 200, 40);

        Actualite.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ActualiteMouseClicked(evt);
            }
        });
        getContentPane().add(Actualite);
        Actualite.setBounds(0, 120, 210, 40);

        tailleLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tailleLabel.setForeground(new java.awt.Color(255, 255, 0));
        tailleLabel.setText("Taille (cm)");
        getContentPane().add(tailleLabel);
        tailleLabel.setBounds(260, 290, 110, 20);

        prenomLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        prenomLabel.setForeground(new java.awt.Color(255, 255, 0));
        prenomLabel.setText("PrÃ©nom");
        getContentPane().add(prenomLabel);
        prenomLabel.setBounds(260, 170, 110, 20);

        dateLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        dateLabel.setForeground(new java.awt.Color(255, 255, 0));
        dateLabel.setText("Date de naissance");
        getContentPane().add(dateLabel);
        dateLabel.setBounds(260, 200, 140, 20);

        categorieLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        categorieLabel.setForeground(new java.awt.Color(255, 255, 0));
        categorieLabel.setText("CatÃ©gorie");
        getContentPane().add(categorieLabel);
        categorieLabel.setBounds(260, 230, 110, 20);

        mainforteLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        mainforteLabel.setForeground(new java.awt.Color(255, 255, 0));
        mainforteLabel.setText("Main forte");
        getContentPane().add(mainforteLabel);
        mainforteLabel.setBounds(260, 350, 110, 20);

        cinLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cinLabel.setForeground(new java.awt.Color(255, 255, 0));
        cinLabel.setText("CIN");
        getContentPane().add(cinLabel);
        cinLabel.setBounds(260, 110, 110, 20);

        poidsLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        poidsLabel.setForeground(new java.awt.Color(255, 255, 0));
        poidsLabel.setText("Poids (Kg)");
        getContentPane().add(poidsLabel);
        poidsLabel.setBounds(260, 320, 110, 20);

        nomLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        nomLabel.setForeground(new java.awt.Color(255, 255, 0));
        nomLabel.setText("Nom");
        getContentPane().add(nomLabel);
        nomLabel.setBounds(260, 140, 110, 20);

        nationaliteLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        nationaliteLabel.setForeground(new java.awt.Color(255, 255, 0));
        nationaliteLabel.setText("NationalitÃ©");
        getContentPane().add(nationaliteLabel);
        nationaliteLabel.setBounds(260, 380, 110, 20);

        clubField.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        clubField.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(clubField);
        clubField.setBounds(390, 440, 120, 20);

        pointsLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        pointsLabel.setForeground(new java.awt.Color(255, 255, 0));
        pointsLabel.setText("Points aquis");
        getContentPane().add(pointsLabel);
        pointsLabel.setBounds(260, 260, 110, 20);

        imageLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        imageLabel.setForeground(new java.awt.Color(255, 255, 0));
        imageLabel.setText("Photo");
        getContentPane().add(imageLabel);
        imageLabel.setBounds(260, 470, 110, 20);

        clubLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        clubLabel.setForeground(new java.awt.Color(255, 255, 0));
        clubLabel.setText("Club");
        getContentPane().add(clubLabel);
        clubLabel.setBounds(260, 410, 110, 20);
        getContentPane().add(tailleField);
        tailleField.setBounds(390, 290, 120, 22);
        getContentPane().add(poidsField);
        poidsField.setBounds(390, 320, 120, 22);
        getContentPane().add(pointsField);
        pointsField.setBounds(390, 260, 120, 22);
        getContentPane().add(cinField);
        cinField.setBounds(390, 110, 120, 22);

        prenomField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prenomFieldActionPerformed(evt);
            }
        });
        getContentPane().add(prenomField);
        prenomField.setBounds(390, 170, 120, 22);
        getContentPane().add(nationaliteField);
        nationaliteField.setBounds(390, 380, 120, 22);
        getContentPane().add(nomField);
        nomField.setBounds(390, 140, 120, 22);
        getContentPane().add(dateField);
        dateField.setBounds(390, 200, 120, 22);

        mainField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Droite", "Gauche", "Les deux" }));
        mainField.setSelectedIndex(-1);
        mainField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainFieldActionPerformed(evt);
            }
        });
        getContentPane().add(mainField);
        mainField.setBounds(390, 350, 120, 22);

        categorieField1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Amateur", "Junior", "Professionnelle", "Senior" }));
        categorieField1.setSelectedIndex(-1);
        categorieField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categorieField1ActionPerformed(evt);
            }
        });
        getContentPane().add(categorieField1);
        categorieField1.setBounds(390, 230, 120, 22);

        clubButton.setText("Parcourir les clubs");
        clubButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clubButtonActionPerformed(evt);
            }
        });
        getContentPane().add(clubButton);
        clubButton.setBounds(390, 410, 120, 25);

        imgButton.setText("Joindre une photo");
        imgButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imgButtonActionPerformed(evt);
            }
        });
        getContentPane().add(imgButton);
        imgButton.setBounds(390, 470, 120, 25);

        clubNameLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        clubNameLabel.setForeground(new java.awt.Color(255, 255, 0));
        clubNameLabel.setText("Club selectionner");
        getContentPane().add(clubNameLabel);
        clubNameLabel.setBounds(260, 440, 130, 20);
        getContentPane().add(imgLabel);
        imgLabel.setBounds(940, 380, 240, 220);

        rechField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechFieldActionPerformed(evt);
            }
        });
        rechField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rechFieldKeyPressed(evt);
            }
        });
        getContentPane().add(rechField);
        rechField.setBounds(280, 20, 160, 30);

        joueurTable.setModel(new JoueurAdapter());
        joueurTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                joueurTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(joueurTable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(590, 110, 590, 260);

        updateButton.setText("Modifier");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        getContentPane().add(updateButton);
        updateButton.setBounds(690, 380, 80, 20);

        deleteButton.setText("Supprimer");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        getContentPane().add(deleteButton);
        deleteButton.setBounds(790, 380, 80, 20);

        addButton.setText("Ajouter");
        addButton.setBorder(null);
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        getContentPane().add(addButton);
        addButton.setBounds(590, 380, 80, 20);

        jButton6.setText("jButton3");
        jButton6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jButton6);
        jButton6.setBounds(590, 380, 80, 20);

        emptyButton.setText("Vider le formulaire");
        emptyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emptyButtonActionPerformed(evt);
            }
        });
        getContentPane().add(emptyButton);
        emptyButton.setBounds(260, 520, 250, 20);

        PDFButton.setText("PDF");
        PDFButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PDFButtonActionPerformed(evt);
            }
        });
        getContentPane().add(PDFButton);
        PDFButton.setBounds(590, 410, 80, 25);

        Fond.setIcon(new javax.swing.ImageIcon(getClass().getResource("/squad/ftt/images/joueurs1.jpg"))); // NOI18N
        getContentPane().add(Fond);
        Fond.setBounds(0, -10, 1260, 650);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Formation5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Formation5MouseClicked
        this.dispose();
        GestionFormation ge = new GestionFormation();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_Formation5MouseClicked

    private void GestionDopageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GestionDopageMouseClicked
        this.dispose();
        GestionDopage ge = new GestionDopage();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_GestionDopageMouseClicked

    private void ConcoursMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ConcoursMouseClicked
        this.dispose();
        GestionConcours ge = new GestionConcours();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_ConcoursMouseClicked

    private void StadeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StadeMouseClicked
        this.dispose();
        GestionStade ge = new GestionStade();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_StadeMouseClicked

    private void MatchAmicaleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MatchAmicaleMouseClicked
        this.dispose();
        GestionArbitre ge = new GestionArbitre();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_MatchAmicaleMouseClicked

    private void TournoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TournoiMouseClicked
        this.dispose();
        GestionEvenement ge = new GestionEvenement();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_TournoiMouseClicked

    private void ClubMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClubMouseClicked
        this.dispose();
        GestionClub ge = new GestionClub();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_ClubMouseClicked

    private void MatchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MatchMouseClicked
        this.dispose();
        GestionMatchs ge = new GestionMatchs();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_MatchMouseClicked

    private void JoueursMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JoueursMouseClicked
        this.dispose();
        GestionJoueurs ge = new GestionJoueurs();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_JoueursMouseClicked

    private void ActualiteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ActualiteMouseClicked

        this.dispose();
        AffichageActualite ge = new AffichageActualite();
        ge.setSize(1220, 655);
    }//GEN-LAST:event_ActualiteMouseClicked

    private void prenomFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prenomFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prenomFieldActionPerformed

    private void mainFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mainFieldActionPerformed

    private void categorieField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categorieField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categorieField1ActionPerformed

    private void clubButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clubButtonActionPerformed
        // TODO add your handling code here:

        clubDisplayFrame.setSize(990, 560);
        clubDisplayFrame.setVisible(true);
        clubDisplayFrame.setAlwaysOnTop(true);
        clubDisplayFrame.setLocationRelativeTo(null);
        clubDisplayFrame.setResizable(false);
    }//GEN-LAST:event_clubButtonActionPerformed

    private void rechFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rechFieldActionPerformed

    private void joueurTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_joueurTableMousePressed
        // TODO add your handling code here:
//        try {
        double cin = (double) joueurTable.getValueAt(joueurTable.getSelectedRow(), 0);
        j = jdao.findJoueurByCin(cin);
//            Blob b = j.getImg_joueur();

//            BufferedInputStream bis = new BufferedInputStream(b.getBinaryStream());
//            Image im = ImageIO.read(bis);
        Image im = new ImageIcon("C:/wamp/www/SquadWeb/web/uploads/joueurs/" + j.getPic()).getImage();
        Image imge = im.getScaledInstance(imgLabel.getWidth(), imgLabel.getHeight(), Image.SCALE_SMOOTH);

        imgLabel.setIcon(new ImageIcon(imge));

        nomField.setText(j.getNom());
        prenomField.setText(j.getPrenom());
        cinField.setValue(j.getCin_joueur());
        dateField.setDate(j.getDate_naissance());
        categorieField1.setSelectedItem(j.getCategorie());
        mainField.setSelectedItem(j.getMain_forte());
        nationaliteField.setText(j.getNationalite());
        tailleField.setValue(j.getTaille());
        poidsField.setValue(j.getPoids());
        pointsField.setValue(j.getPoint_aquis());
        clubField.setText(j.getClub().getLibelle_club());

//        } catch (SQLException | IOException ex) {
//            Logger.getLogger(GestionJoueurs.class.getName()).log(Level.SEVERE, null, ex);
//        } 

    }//GEN-LAST:event_joueurTableMousePressed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        double cin;
        cin = Double.parseDouble(cinField.getValue().toString());
        int T;
        T = Integer.parseInt(tailleField.getValue().toString());
        int P;
        P = Integer.parseInt(poidsField.getValue().toString());
        int points;
        points = Integer.parseInt(pointsField.getValue().toString());
        if (nomField.getText().equals("")
                | prenomField.getText().equals("")
                | cin <= 0
                | dateField.getDate() == null
                | categorieField1.getSelectedItem() == null
                | mainField.getSelectedItem() == null
                | nationaliteField.getText() == null
                | imgLabel.getIcon() == null
                | T <= 0
                | P <= 0
                | points <= 0
                | clubNameLabel.getText().equals("")) {

            JOptionPane.showMessageDialog(null, "Veuillez remplir tous les champs vides");

        } else {

            java.util.Date utilDate = dateField.getDate();
            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());

            j.setCin_joueur(cin);
            j.setNom(nomField.getText());
            j.setPrenom(prenomField.getText());
            j.setDate_naissance(sqlDate);
            j.setPoint_aquis(points);
            j.setTaille(T);
            j.setPoids(P);
            j.setNationalite(nationaliteField.getText());
            j.setClub(cdao.RechercherParId(getId()));
            String cat = (String) categorieField1.getSelectedItem();
            switch (cat) {
                case "Amateur":
                    j.setCategorie(cat);
                    break;
                case "Junior":
                    j.setCategorie(cat);
                    break;
                case "Professionelle":
                    j.setCategorie(cat);
                    break;
                case "Senior":
                    j.setCategorie(cat);
                    break;

            }

            String str = (String) mainField.getSelectedItem();
            switch (str) {
                case "Droite":
                    j.setMain_forte(str);
                    break;
                case "Gauche":
                    j.setMain_forte(str);
                    break;
                case "Les deux":
                    j.setMain_forte(str);
                    break;

            }
            int reply = JOptionPane.showConfirmDialog(null, "Etes vous sur de vouloir ajouter ce joueur?", "Attention", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                jdao.ajouterJoueur(j);
                joueurTable.setModel(new JoueurAdapter());
                JOptionPane.showMessageDialog(null, "Joueur ajoutÃ© avec succÃ©e");

                nomField.setText("");
                prenomField.setText("");
                cinField.setValue(0);
                dateField.setDate(null);
                categorieField1.setSelectedItem(null);
                mainField.setSelectedItem(null);
                nationaliteField.setText("");
                imgLabel.setIcon(null);
                tailleField.setValue(0);
                poidsField.setValue(0);
                pointsField.setValue(0);
                clubField.setText("");
            }
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        if (joueurTable.getSelectedRow() > -1) {
            Double cin = (Double) joueurTable.getValueAt(joueurTable.getSelectedRow(), 0);
            j = jdao.findJoueurByCin(cin);
            int reply = JOptionPane.showConfirmDialog(null, "Etes vous sur de vouloir supprimer ce joueur?", "Attention", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                jdao.supprimerJoueur(j);
                JOptionPane.showMessageDialog(null, "Joueur supprimÃ© avec succÃ©e");
                joueurTable.setModel(new JoueurAdapter());
                nomField.setText("");
                prenomField.setText("");
                cinField.setValue(0);
                dateField.setDate(null);
                categorieField1.setSelectedItem(null);
                mainField.setSelectedItem(null);
                nationaliteField.setText("");
                imgLabel.setIcon(null);
                tailleField.setValue(0);
                poidsField.setValue(0);
                pointsField.setValue(0);
                clubField.setText("");

            }
        } else if (joueurTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Veuillez selectionner un joueur dans le tableau ci dessus");
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void emptyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emptyButtonActionPerformed
        // TODO add your handling code here:
        nomField.setText("");
        prenomField.setText("");
        cinField.setValue(0);
        dateField.setDate(null);
        categorieField1.setSelectedItem(null);
        mainField.setSelectedItem(null);
        nationaliteField.setText("");
        imgLabel.setIcon(null);
        tailleField.setValue(0);
        poidsField.setValue(0);
        pointsField.setValue(0);
        clubField.setText("");
    }//GEN-LAST:event_emptyButtonActionPerformed

    private void imgButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imgButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser ch = new JFileChooser();
        ch.showOpenDialog(null);
        File f = ch.getSelectedFile();
        j.setPicture(f.getAbsolutePath());
        j.setPic(f.getName());
        ImageIcon ic = new ImageIcon(j.getPicture());
        Image img = ic.getImage().getScaledInstance(imgLabel.getWidth(), imgLabel.getHeight(), Image.SCALE_SMOOTH);
        imgLabel.setIcon(new ImageIcon(img));
    }//GEN-LAST:event_imgButtonActionPerformed

    private void ClubTable2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClubTable2MousePressed
        // TODO add your handling code here:
//        try {

            String lib = (String) ClubTable2.getValueAt(ClubTable2.getSelectedRow(), 0);
            int id = cdao.FindId(lib);
            cl = cdao.RechercherParId(id);

//            Blob b = cdao.FindImg(cl.getId_Club());
//            BufferedInputStream bis = new BufferedInputStream(b.getBinaryStream());
//            Image im = ImageIO.read(bis);
//            Image imge = im.getScaledInstance(sigleClubfield.getWidth(), sigleClubfield.getHeight(), Image.SCALE_SMOOTH);
            Image im = new ImageIcon("C:/wamp/www/SquadWeb/web/uploads/clubs/" + cl.getPic()).getImage();
            Image imge = im.getScaledInstance(sigleClubfield.getWidth(), sigleClubfield.getHeight(), Image.SCALE_SMOOTH);

            sigleClubfield.setIcon(new ImageIcon(imge));

//            nomClubField.setText(cl.getLibelle_club());
//            adresseField.setText(cl.getEmplacement_club());
//            nbreField.setValue(cl.getNbre_terrains());
//            descField.setText(cl.getDescritption_club());
//        } catch (IOException | SQLException ex) {
//            Logger.getLogger(GestionClub.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_ClubTable2MousePressed

    private void rechClubFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechClubFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rechClubFieldActionPerformed
    ClubAdapter ca = new ClubAdapter();

    public void filter(String query) {
        TableRowSorter<ClubAdapter> tr = new TableRowSorter<>(ca);
        ClubTable2.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));

    }
    private void rechClubFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rechClubFieldKeyReleased
        // TODO add your handling code here:

        String query = rechClubField.getText();
        filter(query);
        if (query.equals("")) {
            ClubTable2.setModel(ca);
        }
    }//GEN-LAST:event_rechClubFieldKeyReleased

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
        // TODO add your handling code here:
        if (ClubTable2.getSelectedRow() > -1) {
            String lib = (String) ClubTable2.getValueAt(ClubTable2.getSelectedRow(), 0);
            setId(cdao.FindId(lib));
            cl = cdao.RechercherParId(id);
            clubDisplayFrame.setVisible(false);
            sigleClubfield.setIcon(null);
            clubField.setText(cl.getLibelle_club());
        } else if (joueurTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(clubDisplayFrame, "Aucun club selectionner");
        }
    }//GEN-LAST:event_selectButtonActionPerformed

    private void retourButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retourButtonActionPerformed
        // TODO add your handling code here:
        clubDisplayFrame.setVisible(false);
        sigleClubfield.setIcon(null);
    }//GEN-LAST:event_retourButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        if (joueurTable.getSelectedRow() > - 1) {
            Double cin;
            cin = Double.parseDouble(cinField.getValue().toString());
            int T;
            T = Integer.parseInt(tailleField.getValue().toString());
            int P;
            P = Integer.parseInt(poidsField.getValue().toString());
            int points;
            points = Integer.parseInt(pointsField.getValue().toString());
            java.util.Date utilDate = dateField.getDate();
            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());

            j.setCin_joueur(cin);
            j.setNom(nomField.getText());
            j.setPrenom(prenomField.getText());
            j.setDate_naissance(sqlDate);
            j.setPoint_aquis(points);
            j.setTaille(T);
            j.setPoids(P);
            j.setNationalite(nationaliteField.getText());
            if (id != 0) {
                j.setClub(cdao.RechercherParId(id));
                setId(0);
            } else {
                j.setClub(j.getClub());
            }
            String cat = (String) categorieField1.getSelectedItem();
            switch (cat) {
                case "Amateur":
                    j.setCategorie(cat);
                    break;
                case "Junior":
                    j.setCategorie(cat);
                    break;
                case "Professionelle":
                    j.setCategorie(cat);
                    break;
                case "Senior":
                    j.setCategorie(cat);
                    break;

            }

            String str = (String) mainField.getSelectedItem();
            switch (str) {
                case "Droite":
                    j.setMain_forte(str);
                    break;
                case "Gauche":
                    j.setMain_forte(str);
                    break;
                case "Les deux":
                    j.setMain_forte(str);
                    break;

            }
            int reply = JOptionPane.showConfirmDialog(null, "Etes vous sur de vouloir modifier ce joueur?", "Attention", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                jdao.modifierJoueur(j);
                JOptionPane.showMessageDialog(null, "Joueur modifiÃ© avec succÃ©e");
                joueurTable.setModel(new JoueurAdapter());
                nomField.setText("");
                prenomField.setText("");
                cinField.setValue(0);
                dateField.setDate(null);
                categorieField1.setSelectedItem(null);
                mainField.setSelectedItem(null);
                nationaliteField.setText("");
                imgLabel.setIcon(null);
                tailleField.setValue(0);
                poidsField.setValue(0);
                pointsField.setValue(0);
                clubField.setText("");

            }
        } else if (joueurTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Veuillez selectionner un joueur dans le tableau ci dessus");
        }


    }//GEN-LAST:event_updateButtonActionPerformed
    JoueurAdapter ja = new JoueurAdapter();

    public void filter1(String query) {
        TableRowSorter<JoueurAdapter> tr = new TableRowSorter<>(ja);
        joueurTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));

    }
    private void rechFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rechFieldKeyPressed
        // TODO add your handling code here:
        String query = rechField.getText().toLowerCase();
        filter1(query);
        if (query.equals("")) {
            joueurTable.setModel(ja);
        }
    }//GEN-LAST:event_rechFieldKeyPressed

    private void PDFButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PDFButtonActionPerformed
        try {
            // TODO add your handling code here:
            jdao.PdfJoueur();
            JOptionPane.showMessageDialog(null, "PDF crÃ©e avec succÃ©e");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GestionJoueurs.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_PDFButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionJoueurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionJoueurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionJoueurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionJoueurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GestionJoueurs ge = new GestionJoueurs();
                ge.setSize(1220, 665);
                ge.setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Actualite;
    private javax.swing.JLabel Club;
    private javax.swing.JTable ClubTable2;
    private javax.swing.JLabel Concours;
    private javax.swing.JLabel Fond;
    private javax.swing.JLabel Fond2;
    private javax.swing.JLabel Formation5;
    private javax.swing.JLabel GestionDopage;
    private javax.swing.JLabel Joueurs;
    private javax.swing.JLabel Match;
    private javax.swing.JLabel MatchAmicale;
    private javax.swing.JButton PDFButton;
    private javax.swing.JLabel Stade;
    private javax.swing.JLabel Tournoi;
    private javax.swing.JButton addButton;
    private javax.swing.JLabel article;
    private javax.swing.JComboBox categorieField1;
    private javax.swing.JLabel categorieLabel;
    private javax.swing.JSpinner cinField;
    private javax.swing.JLabel cinLabel;
    private javax.swing.JButton clubButton;
    private javax.swing.JFrame clubDisplayFrame;
    private javax.swing.JLabel clubField;
    private javax.swing.JLabel clubLabel;
    private javax.swing.JLabel clubNameLabel;
    private com.toedter.calendar.JDateChooser dateField;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton emptyButton;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JButton imgButton;
    private javax.swing.JLabel imgLabel;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JButton jButton6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable joueurTable;
    private javax.swing.JComboBox mainField;
    private javax.swing.JLabel mainforteLabel;
    private javax.swing.JTextField nationaliteField;
    private javax.swing.JLabel nationaliteLabel;
    private javax.swing.JTextField nomField;
    private javax.swing.JLabel nomLabel;
    private javax.swing.JSpinner poidsField;
    private javax.swing.JLabel poidsLabel;
    private javax.swing.JSpinner pointsField;
    private javax.swing.JLabel pointsLabel;
    private javax.swing.JTextField prenomField;
    private javax.swing.JLabel prenomLabel;
    private javax.swing.JTextField rechClubField;
    private javax.swing.JLabel rechClubLabel;
    private javax.swing.JTextField rechField;
    private javax.swing.JButton retourButton;
    private javax.swing.JButton selectButton;
    private javax.swing.JLabel sigleClubfield;
    private javax.swing.JSpinner tailleField;
    private javax.swing.JLabel tailleLabel;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
