/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package squad.ftt.gui;

import java.awt.Dimension;
import java.sql.Date;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
import squad.ftt.adapters.MatchAdapter;
import squad.ftt.adapters.StadeAdapter;
import squad.ftt.dao.classes.JoueurDao;
import squad.ftt.dao.classes.Match_JoueurDao;
import squad.ftt.dao.classes.MatchtennisDao;
import squad.ftt.dao.classes.SetTennisDao;
import squad.ftt.dao.classes.StadeDao;
import squad.ftt.dao.classes.TourDao;
import squad.ftt.dao.classes.UtilisateurDao;
import squad.ftt.entities.Joueur;
import squad.ftt.entities.Match_has_joueur;
import squad.ftt.entities.Matchtennis;
import squad.ftt.entities.SetTennis;
import squad.ftt.entities.Utilisateur;

/**
 *
 * @author esprit
 */
public class GestionMatchs extends javax.swing.JFrame {
MatchAdapter matchAdapter=new MatchAdapter();
     
    /**
     * Creates new form GestionEvenement
     */
    public GestionMatchs() {
        initComponents();
        combobox_stade();
    }
    private void combobox_stade() {
        StadeDao stadeDao = new StadeDao();
        stadeDao.findAll().stream().forEach((stade) -> {
            jComboBox_listeStade.addItem(stade.getLibelle());
        });
    }
    public void filter(String query) {
        TableRowSorter<MatchAdapter> tr = new TableRowSorter<MatchAdapter>(matchAdapter);
        jTable_match.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        article = new javax.swing.JLabel();
        Formation = new javax.swing.JLabel();
        Concours = new javax.swing.JLabel();
        GestionDopage = new javax.swing.JLabel();
        Stade = new javax.swing.JLabel();
        MatchAmicale = new javax.swing.JLabel();
        Tournoi = new javax.swing.JLabel();
        Club = new javax.swing.JLabel();
        Match = new javax.swing.JLabel();
        Joueurs = new javax.swing.JLabel();
        Actualite = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_match = new JTable(matchAdapter);
        jDateChooser_dateMatch = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox_listeStade = new javax.swing.JComboBox();
        jButton_ajout = new javax.swing.JButton();
        jButton_update = new javax.swing.JButton();
        jButton_supprimer = new javax.swing.JButton();
        jTextField_recherche = new javax.swing.JTextField();
        Fond = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);
        getContentPane().add(article);
        article.setBounds(0, 590, 210, 30);

        Formation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FormationMouseClicked(evt);
            }
        });
        getContentPane().add(Formation);
        Formation.setBounds(0, 540, 210, 40);

        Concours.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ConcoursMouseClicked(evt);
            }
        });
        getContentPane().add(Concours);
        Concours.setBounds(0, 500, 210, 40);

        GestionDopage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GestionDopageMouseClicked(evt);
            }
        });
        getContentPane().add(GestionDopage);
        GestionDopage.setBounds(0, 450, 200, 40);

        Stade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StadeMouseClicked(evt);
            }
        });
        getContentPane().add(Stade);
        Stade.setBounds(0, 410, 200, 40);

        MatchAmicale.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MatchAmicaleMouseClicked(evt);
            }
        });
        getContentPane().add(MatchAmicale);
        MatchAmicale.setBounds(0, 360, 200, 40);

        Tournoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TournoiMouseClicked(evt);
            }
        });
        getContentPane().add(Tournoi);
        Tournoi.setBounds(0, 310, 200, 40);

        Club.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClubMouseClicked(evt);
            }
        });
        getContentPane().add(Club);
        Club.setBounds(0, 260, 200, 40);

        Match.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MatchMouseClicked(evt);
            }
        });
        getContentPane().add(Match);
        Match.setBounds(0, 210, 200, 40);

        Joueurs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JoueursMouseClicked(evt);
            }
        });
        getContentPane().add(Joueurs);
        Joueurs.setBounds(0, 160, 200, 40);

        Actualite.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ActualiteMouseClicked(evt);
            }
        });
        getContentPane().add(Actualite);
        Actualite.setBounds(0, 120, 210, 40);

        jTable_match.getColumn("id_match").setMinWidth(0);
        jTable_match.getColumn("id_match").setMaxWidth(0);
        jTable_match.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_matchMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_match);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(260, 100, 910, 170);

        jDateChooser_dateMatch.setDateFormatString("yyyy-MM-dd");
        getContentPane().add(jDateChooser_dateMatch);
        jDateChooser_dateMatch.setBounds(400, 310, 170, 30);

        jLabel1.setFont(new java.awt.Font("Urdu Typesetting", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 0));
        jLabel1.setText("Date Match");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(250, 310, 150, 30);

        jLabel2.setFont(new java.awt.Font("Urdu Typesetting", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 0));
        jLabel2.setText("Choisir un Stade");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(250, 360, 150, 30);

        jComboBox_listeStade.setModel(new javax.swing.DefaultComboBoxModel(new String[] {"select Stade"}));
        getContentPane().add(jComboBox_listeStade);
        jComboBox_listeStade.setBounds(400, 360, 170, 30);

        jButton_ajout.setText("Continuer");
        jButton_ajout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ajoutActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_ajout);
        jButton_ajout.setBounds(260, 550, 100, 30);

        jButton_update.setText("Modifier");
        jButton_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_updateActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_update);
        jButton_update.setBounds(390, 550, 100, 30);

        jButton_supprimer.setText("Supprimer");
        jButton_supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_supprimerActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_supprimer);
        jButton_supprimer.setBounds(530, 550, 100, 30);

        jTextField_recherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_rechercheActionPerformed(evt);
            }
        });
        jTextField_recherche.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_rechercheKeyReleased(evt);
            }
        });
        getContentPane().add(jTextField_recherche);
        jTextField_recherche.setBounds(440, 20, 150, 30);

        Fond.setIcon(new javax.swing.ImageIcon(getClass().getResource("/squad/ftt/images/match1.jpg"))); // NOI18N
        getContentPane().add(Fond);
        Fond.setBounds(0, -10, 1260, 650);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FormationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FormationMouseClicked
        this.dispose();
        GestionFormation ge = new GestionFormation();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_FormationMouseClicked

    private void ConcoursMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ConcoursMouseClicked
        this.dispose();
        GestionConcours ge = new GestionConcours();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_ConcoursMouseClicked

    private void GestionDopageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GestionDopageMouseClicked
        this.dispose();
        GestionDopage ge = new GestionDopage();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_GestionDopageMouseClicked

    private void StadeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StadeMouseClicked
        this.dispose();
        GestionStade ge = new GestionStade();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_StadeMouseClicked

    private void MatchAmicaleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MatchAmicaleMouseClicked
        this.dispose();
        GestionArbitre ge = new GestionArbitre();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_MatchAmicaleMouseClicked

    private void TournoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TournoiMouseClicked
        this.dispose();
        GestionEvenement ge = new  GestionEvenement();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_TournoiMouseClicked

    private void ClubMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClubMouseClicked
        this.dispose();
        GestionClub ge = new GestionClub();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_ClubMouseClicked

    private void MatchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MatchMouseClicked
        this.dispose();
        GestionMatchs ge = new GestionMatchs();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_MatchMouseClicked

    private void JoueursMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JoueursMouseClicked
        this.dispose();
        GestionJoueurs ge = new GestionJoueurs();
        ge.setSize(1220, 655);
        ge.setVisible(true);
        
    }//GEN-LAST:event_JoueursMouseClicked

    private void ActualiteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ActualiteMouseClicked

        this.dispose();
        AffichageActualite ge = new AffichageActualite();
        ge.setSize(1220, 655);
        ge.setVisible(true);
    }//GEN-LAST:event_ActualiteMouseClicked

    private void jButton_ajoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ajoutActionPerformed
        ArrayList<Joueur> liste =new ArrayList<>();
        UtilisateurDao u =new UtilisateurDao();
        TourDao tourDao = new TourDao();
        Utilisateur arbitre= new Utilisateur();
        Matchtennis match = new Matchtennis();
        MatchtennisDao matchDao = new MatchtennisDao();
        StadeDao stadeDao = new StadeDao();
        if(((JTextField) jDateChooser_dateMatch.getDateEditor().getUiComponent()).getText().equals("") ||
            ((String)jComboBox_listeStade.getSelectedItem()).equals("select Stade")){
              JOptionPane.showMessageDialog(null,"Remplir les informations");
        }else{
        java.util.Date utilDate = jDateChooser_dateMatch.getDate();
        java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
        java.sql.Date sqlDate1 = new java.sql.Date(new java.util.Date( ).getTime());
        if(sqlDate.before(sqlDate1) ){
           JOptionPane.showMessageDialog(null,"Entrer une date valide"); 
        }else{
        match.setDate_match(sqlDate);
        match.setNombre_point(0);
        match.setListJoueur(liste);
        match.setTour(tourDao.findTourById(30));
        match.setStade(stadeDao.findStadeByLibelle((String) jComboBox_listeStade.getSelectedItem()));
        this.dispose();
        GestionMatchAmical ge = new GestionMatchAmical(match);
        ge.setSize(1220, 655);
        ge.setVisible(true);
        }}
    }//GEN-LAST:event_jButton_ajoutActionPerformed

    private void jButton_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_updateActionPerformed
        Matchtennis match=new Matchtennis();
        MatchtennisDao matchtennisDao =new MatchtennisDao();
        TourDao tourDao = new TourDao();
        StadeDao stadeDao = new StadeDao();
        UtilisateurDao utilisateurDao =new UtilisateurDao();
        if(jTable_match.getSelectedRow()>=0 && jTable_match.getSelectedRow()<=matchAdapter.getRowCount()){
        java.util.Date dateMatch = matchtennisDao.findMatchById((int)matchAdapter.getValueAt(jTable_match.getSelectedRow(), 0)).getDate_match();
        java.sql.Date dateMatch1 = new java.sql.Date(dateMatch.getTime());
        java.util.Date utilDate = jDateChooser_dateMatch.getDate();
        java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
        java.sql.Date sqlDate1 = new java.sql.Date(new java.util.Date( ).getTime());
        if(dateMatch1.before(sqlDate1)){
            JOptionPane.showMessageDialog(null,"ce match est deja joué");
        }else{
        if(sqlDate.before(sqlDate1)){
           JOptionPane.showMessageDialog(null,"Entrer une date valide"); 
        }else{
            if(((String)jComboBox_listeStade.getSelectedItem()).equals("select Stade")){
                JOptionPane.showMessageDialog(null,"choisir un stade");
            }else{
        match.setDate_match(sqlDate);
        match.setNombre_point(0);
        match.setTour(tourDao.findTourById(30));
        match.setStade(stadeDao.findStadeByLibelle((String) jComboBox_listeStade.getSelectedItem()));
        match.setId_match((int) matchAdapter.getValueAt(jTable_match.getSelectedRow(), 0));
        match.setArbitre(matchtennisDao.findMatchById((int) matchAdapter.getValueAt(jTable_match.getSelectedRow(), 0)).getArbitre());
        String[] options = new String[3];
         options[0] = new String("oui");
         options[1] = new String("modifier Arbitre/Joueurs");
         options[2] = new String("modifier Sets");
        int confirm=JOptionPane.showOptionDialog(null,"confirmer modification","", 0,JOptionPane.INFORMATION_MESSAGE,null,options,null);
        if(confirm ==0){
        matchtennisDao.updateMatch(match);
        jTable_match.setModel(new MatchAdapter());
        jTable_match.getColumn("id_match").setMinWidth(0);
        jTable_match.getColumn("id_match").setMaxWidth(0);
        }if(confirm==1){
             this.dispose();
        GestionMatchAmical ge = new GestionMatchAmical(match);
        ge.setSize(1220, 655);
        ge.setVisible(true);
        }if(confirm==2){
           this.dispose();
        GestionSets gs = new GestionSets(match);
        gs.setSize(1220, 655);
        gs.setVisible(true);
        
            }}}}}else{
        JOptionPane.showMessageDialog(null,"choisir un match");
        }
    }//GEN-LAST:event_jButton_updateActionPerformed

    private void jTable_matchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_matchMouseClicked
        jDateChooser_dateMatch.setDate((java.util.Date) matchAdapter.getValueAt(jTable_match.getSelectedRow(), 1));
        jComboBox_listeStade.setSelectedItem(matchAdapter.getValueAt(jTable_match.getSelectedRow(), 2));
    }//GEN-LAST:event_jTable_matchMouseClicked

    private void jButton_supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_supprimerActionPerformed
        MatchtennisDao matchDao = new MatchtennisDao();
        SetTennisDao setTennisDao= new SetTennisDao();
        List<SetTennis> listSet= new ArrayList<>();
        Match_has_joueur match_has_joueur = new Match_has_joueur();
        Match_JoueurDao match_JoueurDao = new Match_JoueurDao();
        int confirm=JOptionPane.showConfirmDialog(null,"Confirmer la suppression?");
        if(confirm ==0){
        for (Joueur joueur : match_JoueurDao.findByMatch(matchDao.findMatchById((int) matchAdapter.getValueAt(jTable_match.getSelectedRow(), 0)))) {
            match_has_joueur.setMatch(matchDao.findMatchById((int) matchAdapter.getValueAt(jTable_match.getSelectedRow(), 0)));
            match_has_joueur.setJoueur(joueur);
            match_JoueurDao.deleteMatch_Joueur(match_has_joueur);
        }
         listSet=setTennisDao.findSetTennisByMatch(matchDao.findMatchById((int) matchAdapter.getValueAt(jTable_match.getSelectedRow(), 0)));
        for(SetTennis setTennis: listSet){
        setTennisDao.removeSets(setTennis.getId());
        matchDao.removeMatchById((int) matchAdapter.getValueAt(jTable_match.getSelectedRow(), 0));
        matchAdapter.removeRow(jTable_match.getSelectedRow());
       
        }
        }
    }//GEN-LAST:event_jButton_supprimerActionPerformed

    private void jTextField_rechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_rechercheActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_rechercheActionPerformed

    private void jTextField_rechercheKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_rechercheKeyReleased
        String query=jTextField_recherche.getText();
       filter(query); 
    }//GEN-LAST:event_jTextField_rechercheKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionMatchs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionMatchs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionMatchs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionMatchs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GestionMatchs ge = new GestionMatchs();
                ge.setSize(1220, 665);
                ge.setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Actualite;
    private javax.swing.JLabel Club;
    private javax.swing.JLabel Concours;
    private javax.swing.JLabel Fond;
    private javax.swing.JLabel Formation;
    private javax.swing.JLabel GestionDopage;
    private javax.swing.JLabel Joueurs;
    private javax.swing.JLabel Match;
    private javax.swing.JLabel MatchAmicale;
    private javax.swing.JLabel Stade;
    private javax.swing.JLabel Tournoi;
    private javax.swing.JLabel article;
    private javax.swing.JButton jButton_ajout;
    private javax.swing.JButton jButton_supprimer;
    private javax.swing.JButton jButton_update;
    private javax.swing.JComboBox jComboBox_listeStade;
    private com.toedter.calendar.JDateChooser jDateChooser_dateMatch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_match;
    private javax.swing.JTextField jTextField_recherche;
    // End of variables declaration//GEN-END:variables
}
